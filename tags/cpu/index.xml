<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cpu on Norwegian Wood</title>
    <link>https://akynazh.site/tags/cpu/</link>
    <description>Recent content in cpu on Norwegian Wood</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <managingEditor>akynazh@qq.com (Jzh)</managingEditor>
    <webMaster>akynazh@qq.com (Jzh)</webMaster>
    <copyright>Cactus &amp; Jzh</copyright>
    <lastBuildDate>Tue, 04 Oct 2022 23:18:24 +0800</lastBuildDate><atom:link href="https://akynazh.site/tags/cpu/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>8086 汇编学习记录</title>
      <link>https://akynazh.site/posts/2022/10/8086-assembly-learning-record/</link>
      <pubDate>Tue, 04 Oct 2022 23:18:24 +0800</pubDate>
      <author>akynazh@qq.com (Jzh)</author>
      <guid>https://akynazh.site/posts/2022/10/8086-assembly-learning-record/</guid>
      <description>8086 PC 机内存地址空间分配 00000~9FFFF: 主存储器地址空间（RAM） A0000~BFFFF: 显存地址空间 C0000~FFFFF: 各类ROM地址空间 段寄存器 8086CPU 不支持将数据直接送入段寄存器的操作，ds 是一个段寄存器，所以 mov ds，1000H 这条指令是非法的。
要将 1000H 送入 ds，只好用一个寄存器来进行中转，即先将 1000H 送入一个一般的寄存器，如 bx，再将 bx 中的内容送入 ds。
关于 SS，SP 8086CPU 中，有两个寄存器，段寄存器 SS 和寄存器 SP，栈顶的段地址存放在 SS 中，偏移地址存放在 SP 中。
任意时刻，SS:SP 指向栈顶元素。push 指令和 pop 指令执行时，CPU 从 SS 和 SP 中得到栈顶的地址。
伪指令 在汇编语言源程序中，包含两种指令，一种是汇编指令，一种是伪指令。
汇编指令是有对应的机器码的指令，可以被编译为机器指令，最终为 CPU 所执行。
而伪指令没有对应的机器指令，最终不被 CPU 所执行。那么谁来执行伪指令呢?
伪指令是由编译器来执行的指令，编译器根据伪指令来进行相关的编译工作。
寻址方式 立即寻址：mov ax, 1234H or mov ax, VARW or mov ax, [VARW] （VARW 是内存字变量） 直接寻址：mov ax, [1234H] 寄存器直接寻址：mov ax, bx 寄存器间接寻址：mov ax, [bx] 寄存器相对寻址：mov ax, [bx+1] 基址+变址寻址：mov ax, [bx+si] or mov ax, [bx][si] 基址+变址+相对寻址：mov ax, [bx+si+1] 注：在汇编源程序中，数据不能以字母开头，所以要在前面加 0。比如，9138h 在汇编源程序中可以直接写为 9138h，而 A000h 在汇编源程序中要写为 0A000h。</description>
    </item>
    
  </channel>
</rss>